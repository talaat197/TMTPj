/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package klydar_list;

import java.awt.Color;
import java.awt.Font;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;

/**
 *
 * @author TEAM 161 User
 */
public class Admin_Setting extends javax.swing.JFrame {

    /**
     * Creates new form Admin_Setting
     */
    ArrayList<String> dynamic_columns;
    static Data ref;
    int first_time = 0;//for combobox actions
    public Admin_Setting() {
        initComponents();
        setLocationRelativeTo(null);
        dynamic_columns = new ArrayList<String>();
        setLocationRelativeTo(null);
    }
    public Admin_Setting(Data s)
    {
        try
        {
            //make initially table
            initComponents();
            setLocationRelativeTo(null);
            dynamic_columns = new ArrayList<String>();
            ref =s;
            ResultSet rs = ref.db.select_query("select * from lists");
            ResultSetMetaData metaData = rs.getMetaData();
            // add names of columns to ComboBox
            for(int i=1 ; i<=metaData.getColumnCount() ; i++)
                jComboBox1.addItem(metaData.getColumnName(i));
            jComboBox1.removeItem("id");
            jComboBox1.removeItem("name");
            jComboBox1.removeItem("attendees");
            dynamic_columns.add("id");
            dynamic_columns.add("name");
            dynamic_columns.add("attendees");
            dynamic_columns.add("type");
            dynamic_columns.add("sponsor");
            set_style();
            KeyboardFocusManager.getCurrentKeyboardFocusManager()
                .addKeyEventDispatcher(new KeyEventDispatcher() {
              @Override
              public boolean dispatchKeyEvent(KeyEvent e) {
                if(e.getKeyCode()== KeyEvent.VK_DELETE )
                {
                    String column=jTable1.getColumnName(jTable1.getSelectedColumn());
                        if(column.equals("attendees") || column.equals("id") || column.equals("name") || column.equals("type") || column.equals("sponsor"))
                        {
                            alert_frame af = new alert_frame("Primary Columns Not Allowed");
                            af.setVisible(true);
                        }
                        else
                        {
                            dynamic_columns.remove(column);
                            set_style();
                        }
                }
                return false;
              }
                });
        }
        catch(Exception e)
        {
            
        }
    }//end Admin_Setting
     public void action_cell_admin()
    {
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        submit_table = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Admin Setting");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Columns", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(230, 230, 230));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(102, 102, 102));
        jTextArea1.setRows(5);
        jTextArea1.setText("(Steps To Build Your Table)\nSelect Column and it will be added to table\nSort It\nSumbit Your Table\n\nNote : id,name,attendees,type,sponsor are \nprimary columns");
        jScrollPane2.setViewportView(jTextArea1);

        submit_table.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        submit_table.setForeground(new java.awt.Color(51, 51, 51));
        submit_table.setText("Submit");
        submit_table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit_tableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(submit_table, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submit_table, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        try
        {
            //check if column already found
            int column_added_before=0;
            if(first_time >1 )
            {
                String column_selected = jComboBox1.getSelectedItem().toString();
                for(int i=0 ; i<dynamic_columns.size() ; i++)
                {
                    if(dynamic_columns.get(i).equals(column_selected))
                    {
                        column_added_before=1;
                        alert_frame af = new alert_frame("Column Already Added");
                        af.setVisible(true);
                    }
                }
                if(column_added_before == 0)
                {
                    dynamic_columns.add(column_selected);
                    //add selected column from list to table
                    set_style();
                }
            }//end if
            else
            {
                first_time++;
            }//end else
        }//end try
        catch(Exception e)
        {
            //end 
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void submit_tableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit_tableActionPerformed
        // TODO add your handling code here:
        try
        {
            //check for columns id , name , attendees first
            if(jTable1.getColumnName(0).equals("id") && jTable1.getColumnName(1).equals("name") && jTable1.getColumnName(2).equals("attendees"))
            {
                String columns="";
                String Base_query="";
                //sort table in dynamic column list as appear in Gui
                dynamic_columns.removeAll(dynamic_columns);
                for(int k=0 ; k<jTable1.getColumnCount() ; k++)
                { 
                    dynamic_columns.add(jTable1.getColumnName(k));
                }
                columns+=dynamic_columns;
                Base_query="select "+columns+" from lists";
                Base_query=Base_query.replace("[", "");
                Base_query=Base_query.replace("]", "");
                ref.db.updata_query("update admin_setting set column_setting ='"+Base_query+"' where id_setting='1'");
                correct_frame cf = new correct_frame("Table Uploaded successfully");
                cf.setVisible(true);
            }
            else
            {
                alert_frame af = new alert_frame("Table Should Be id , name , attendees ....");
                af.setVisible(true);
            }
        }//end try
        catch(Exception exx)
        {
           alert_frame af = new alert_frame("Error In DataBase");
           af.setVisible(true);
        }
    }//GEN-LAST:event_submit_tableActionPerformed
    public void set_style()
    {
         jTable1 = new JTable(buildTableModel(dynamic_columns));
        jScrollPane1.setViewportView(jTable1);
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTable1.getTableHeader().setFont(new Font("SansSerif", Font.BOLD, 20));
        for(int i=0 ; i<jTable1.getColumnCount() ; i++)
        jTable1.getColumnModel().getColumn(i).setMinWidth(130);
        jTable1.setRowHeight(40);
        JTableHeader header = jTable1.getTableHeader();
        header.setBackground(ref.white_blue );
        header.setForeground(Color.WHITE);
        action_cell_admin();
    }//end
    /**
     * @param args the command line arguments
     */
    public static DefaultTableModel buildTableModel(ArrayList arr)
       {
           Vector<String> columnNames = null;
           Vector<Vector<Object>> data = null;
           try
           {
               
                // names of columns
                 columnNames = new Vector<String>();
                for (int column = 0; column <arr.size(); column++) {

                    columnNames.add(arr.get(column).toString());
                }
                // data of the table
                data = new Vector<Vector<Object>>();
                 Vector<Object> vector = new Vector<Object>();
                for (int columnIndex = 0; columnIndex <arr.size(); columnIndex++) {
                    vector.add("");
                }
                data.add(vector);
            }
            catch(Exception e)
            {
                System.out.println(e);
                //nothing
            }
            return new DefaultTableModel(data, columnNames);

        }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_Setting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_Setting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_Setting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_Setting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_Setting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton submit_table;
    // End of variables declaration//GEN-END:variables
}
